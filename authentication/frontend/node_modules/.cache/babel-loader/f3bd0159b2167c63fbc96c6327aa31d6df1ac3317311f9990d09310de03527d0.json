{"ast":null,"code":"var _jsxFileName = \"/home/cybro-shaheem/Desktop/project/authentication/frontend/src/pages/Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'signup';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'unsupported mode'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'could not authenticate'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","$RefreshReg$"],"sources":["/home/cybro-shaheem/Desktop/project/authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nimport {json} from 'react-router-dom'\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\n\nexport async function action({request}){\nconst searchParams = new URL(request.url).searchParams;\n\nconst mode = searchParams.get('mode') || 'signup';\n\nif(mode !== 'login' && mode!=='signup'){\n  throw json({message:'unsupported mode'},{status:422})\n}\n\n  const  data = await request.formData();\n  const authData = {\n    email:data.get('email'),\n    password:data.get('password'),\n  };\n  const response = await fetch('http://localhost:8080/'+mode,{\n    method:'POST',\n    headers:{\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  \n\n  if(response.status===422||response.status===401){\n\n    return response;\n  }\n\n  if(!response.ok){\n    throw json({message:'could not authenticate'},{status:500});\n  }\n}\n\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACrC,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACH,QAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAGjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACvC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EAEtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,QAAQ;EAEjD,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAG,QAAQ,EAAC;IACrC,MAAMd,IAAI,CAAC;MAACgB,OAAO,EAAC;IAAkB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvD;EAEE,MAAOC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACtC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAACH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACvBO,QAAQ,EAACJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC9B,CAAC;EACD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAACV,IAAI,EAAC;IACzDW,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAGF,IAAGG,QAAQ,CAACN,MAAM,KAAG,GAAG,IAAEM,QAAQ,CAACN,MAAM,KAAG,GAAG,EAAC;IAE9C,OAAOM,QAAQ;EACjB;EAEA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM9B,IAAI,CAAC;MAACgB,OAAO,EAAC;IAAwB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC7D;AACF;AAAC,IAAAT,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}