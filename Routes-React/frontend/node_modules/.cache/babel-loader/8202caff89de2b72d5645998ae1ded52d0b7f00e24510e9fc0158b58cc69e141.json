{"ast":null,"code":"var _jsxFileName = \"/home/cybro-shaheem/Desktop/project/Routes-React/frontend/src/pages/NewEventPage.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      Message: 'could not save'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","Message","status","$RefreshReg$"],"sources":["/home/cybro-shaheem/Desktop/project/Routes-React/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage(){\n    \n    return <EventForm/>\n}\nexport default NewEventPage\n\nexport async function action({request,params}){\n    const data = request.formData();\n    const eventData = {\n        title:data.get('title'),\n        image:data.get('image'),\n        date:data.get('date'),\n        description: data.get('description'),\n\n\n    }\n    const response = await fetch('http://localhost:8080/events',{\n        method:'POST',\n        headers:{\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify(eventData)\n    });\n    if(!response.ok){\n        throw json({Message:'could not save'},{status:500})\n    }\n    return redirect('/events')\n\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAE;EAEnB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvB;AAACC,EAAA,GAHQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC1C,MAAMC,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAC/B,MAAMC,SAAS,GAAG;IACdC,KAAK,EAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACrBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EAGvC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACxDC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EACF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM7B,IAAI,CAAC;MAAC8B,OAAO,EAAC;IAAgB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvD;EACA,OAAO9B,QAAQ,CAAC,SAAS,CAAC;AAE9B;AAAC,IAAAS,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}