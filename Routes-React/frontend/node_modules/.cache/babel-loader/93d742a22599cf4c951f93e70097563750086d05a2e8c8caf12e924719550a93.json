{"ast":null,"code":"var _jsxFileName = \"/home/cybro-shaheem/Desktop/project/Routes-React/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport EventsPage from './pages/Events.js';\nimport EventDetailPage, { loader as eventLoader } from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport Root from './pages/Root';\nimport EditPage from './pages/EditEventPage.js';\nimport EventRoot from './pages/EventRoot.js';\nimport { loader as eventsLoader } from './pages/Events.js';\nimport Error from './pages/Error.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 20\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 16\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(EventRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 28\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 27\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: eventLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this)\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EventsPage","EventDetailPage","loader","eventLoader","NewEventPage","Root","EditPage","EventRoot","eventsLoader","Error","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/home/cybro-shaheem/Desktop/project/Routes-React/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter,RouterProvider} from 'react-router-dom';\nimport EventsPage from './pages/Events.js';\nimport EventDetailPage,{loader as eventLoader } from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport Root from './pages/Root';\nimport EditPage from './pages/EditEventPage.js';\nimport EventRoot from './pages/EventRoot.js';\nimport { loader as eventsLoader } from './pages/Events.js';\nimport Error from './pages/Error.js';\n\nconst router = createBrowserRouter([{\n  path:'/',element:<Root/>,\n  errorElement:<Error/>,\n  children:[\n    {index:true,element:<EventRoot/>},\n    {path:'events',element:<EventRoot/>,children:[\n      {index:true,element:<EventsPage/>,loader:eventsLoader },\n      {\n      path:':eventId',\n      id:'event-detail',\n      loader:eventLoader,\n      children:[\n        {index:true,element:<EventDetailPage/>},\n        {path:'edit',element:<EditPage/>}\n\n      ]\n    },\n      {path:'new',element:<NewEventPage/>},\n    ]},\n\n  ]\n}\n \n])\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAACC,cAAc,QAAO,kBAAkB;AACnE,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,eAAe,IAAEC,MAAM,IAAIC,WAAW,QAAQ,yBAAyB;AAC9E,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASL,MAAM,IAAIM,YAAY,QAAQ,mBAAmB;AAC1D,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CAAC;EAClCe,IAAI,EAAC,GAAG;EAACC,OAAO,eAACH,OAAA,CAACN,IAAI;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACxBC,YAAY,eAACR,OAAA,CAACF,KAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACrBE,QAAQ,EAAC,CACP;IAACC,KAAK,EAAC,IAAI;IAACP,OAAO,eAACH,OAAA,CAACJ,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACjC;IAACL,IAAI,EAAC,QAAQ;IAACC,OAAO,eAACH,OAAA,CAACJ,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAACE,QAAQ,EAAC,CAC3C;MAACC,KAAK,EAAC,IAAI;MAACP,OAAO,eAACH,OAAA,CAACX,UAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAAChB,MAAM,EAACM;IAAa,CAAC,EACvD;MACAK,IAAI,EAAC,UAAU;MACfS,EAAE,EAAC,cAAc;MACjBpB,MAAM,EAACC,WAAW;MAClBiB,QAAQ,EAAC,CACP;QAACC,KAAK,EAAC,IAAI;QAACP,OAAO,eAACH,OAAA,CAACV,eAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC,EACvC;QAACL,IAAI,EAAC,MAAM;QAACC,OAAO,eAACH,OAAA,CAACL,QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC;IAGrC,CAAC,EACC;MAACL,IAAI,EAAC,KAAK;MAACC,OAAO,eAACH,OAAA,CAACP,YAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,CAAC;EACrC,CAAC;AAGN,CAAC,CAEA,CAAC;AACF,SAASK,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAACZ,cAAc;IAACa,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}