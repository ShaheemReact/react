{"ast":null,"code":"var _jsxFileName = \"/home/cybro-shaheem/Desktop/project/reduxReact/src/components/Counter.js\";\nimport { Component } from 'react';\nimport classes from './Counter.module.css';\n// import { useSelector,useDispatch, connect } from 'react-redux'\n// const Counter = () => {\n//   const counter  = useSelector(state => state.counter);  \n//   const dispatch = useDispatch();\n//   const toggleCounterHandler = () => {};\n\n//   const incrementHandler = ()=>{\n//     dispatch({type:'increment'})\n//   }\n//   const decrementHandler = ()=>{\n//     dispatch({type:'decrement'});\n//   }\n//   return ( \n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>   \n//         <button onClick={decrementHandler}>decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle center</button>\n//     </main>\n//   );\n// };\n\n// export default Counter;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.decrement();\n  }\n  decrementHandler() {\n    this.props.decrement;\n  }\n  toggleCounterHandler() {}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(this),\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind(this),\n          children: \"decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: yhis.toggleCounterHandler,\n        children: \"Toggle center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//coonect want 2 args both are function 1) function that maps redux state to props\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      typr: 'increment'\n    }),\n    decrement: () => dispatch({\n      typr: 'decrement'\n    })\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"names":["Component","classes","jsxDEV","_jsxDEV","Counter","incrementHandler","props","decrement","decrementHandler","toggleCounterHandler","render","className","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","bind","yhis","mapStateToProps","state","mapDispatchToProps","dispatch","increment","typr","connect"],"sources":["/home/cybro-shaheem/Desktop/project/reduxReact/src/components/Counter.js"],"sourcesContent":["import { Component } from 'react';\nimport classes from './Counter.module.css';\n// import { useSelector,useDispatch, connect } from 'react-redux'\n// const Counter = () => {\n//   const counter  = useSelector(state => state.counter);  \n//   const dispatch = useDispatch();\n//   const toggleCounterHandler = () => {};\n\n\n//   const incrementHandler = ()=>{\n//     dispatch({type:'increment'})\n//   }\n//   const decrementHandler = ()=>{\n//     dispatch({type:'decrement'});\n//   }\n//   return ( \n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>   \n//         <button onClick={decrementHandler}>decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle center</button>\n//     </main>\n//   );\n// };\n\n// export default Counter;\n\n\nclass Counter extends Component{\n  incrementHandler(){\n    this.props.decrement()\n  }\n  decrementHandler(){\n    this.props.decrement\n  }\n  toggleCounterHandler(){}\n  render(){\n    return ( \n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={this.incrementHandler.bind(this)}>Increment</button>   \n          <button onClick={this.decrementHandler.bind(this)}>decrement</button>\n        </div>\n        <button onClick={yhis.toggleCounterHandler}>Toggle center</button>\n      </main>\n    );\n  }\n}\n \n//coonect want 2 args both are function 1) function that maps redux state to props\nconst mapStateToProps = state =>{\n  return{\n    counter:state.counter\n  };\n};\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    increment:()=>dispatch({typr:'increment'}),\n    decrement:()=>dispatch({typr:'decrement'})\n\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Counter);          "],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,OAAO,SAASJ,SAAS;EAC7BK,gBAAgBA,CAAA,EAAE;IAChB,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,CAAC;EACxB;EACAC,gBAAgBA,CAAA,EAAE;IAChB,IAAI,CAACF,KAAK,CAACC,SAAS;EACtB;EACAE,oBAAoBA,CAAA,EAAE,CAAC;EACvBC,MAAMA,CAAA,EAAE;IACN,oBACEP,OAAA;MAAMQ,SAAS,EAAEV,OAAO,CAACW,OAAQ;MAAAC,QAAA,gBAC/BV,OAAA;QAAAU,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBd,OAAA;QAAKQ,SAAS,EAAEV,OAAO,CAACiB,KAAM;QAAAL,QAAA,EAAE,IAAI,CAACP,KAAK,CAACM;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzDd,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAQgB,OAAO,EAAE,IAAI,CAACd,gBAAgB,CAACe,IAAI,CAAC,IAAI,CAAE;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrEd,OAAA;UAAQgB,OAAO,EAAE,IAAI,CAACX,gBAAgB,CAACY,IAAI,CAAC,IAAI,CAAE;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACNd,OAAA;QAAQgB,OAAO,EAAEE,IAAI,CAACZ,oBAAqB;QAAAI,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAEX;AACF;;AAEA;AACA,MAAMK,eAAe,GAAGC,KAAK,IAAG;EAC9B,OAAM;IACJX,OAAO,EAACW,KAAK,CAACX;EAChB,CAAC;AACH,CAAC;AAED,MAAMY,kBAAkB,GAAGC,QAAQ,IAAG;EACpC,OAAM;IACJC,SAAS,EAACA,CAAA,KAAID,QAAQ,CAAC;MAACE,IAAI,EAAC;IAAW,CAAC,CAAC;IAC1CpB,SAAS,EAACA,CAAA,KAAIkB,QAAQ,CAAC;MAACE,IAAI,EAAC;IAAW,CAAC;EAE3C,CAAC;AACH,CAAC;AACD,eAAeC,OAAO,CAACN,eAAe,EAACE,kBAAkB,CAAC,CAACpB,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}